node {
    try {
    Slacknotif('STARTED')
    echo "current job name is : ${env.JOB_NAME}"
    echo "current node name is : ${env.NODE_NAME}"
    echo "jenkins page ofcl path url is : ${env.JENKINS_URL}"
    properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '10', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([githubPush()])])
    def mavenhome = tool name: "maven-3.9.2"

    stage('checkout code'){
        git branch: 'development', credentialsId: '85209c98-b1f1-4e26-851d-e1839a797b58', url: 'https://github.com/kinginfo-ecom/maven-web-application-1.git'
    }
    stage('build'){
        sh "${mavenhome}/bin/mvn clean package"
    }
    stage('soanrqube report'){
        sh "${mavenhome}/bin/mvn cean sonar:sonar "
    }
    stage('uploadto_artifact repo'){
        sh "${mavenhome}/bin/mvn clean deploy "
    }
    stage('deploy to tomcat'){
        sshagent(['186c4002-4fc1-4d4b-9d6d-8c68c9b59b06']) {
            sh "scp -o StrictHostKeyChecking=no target/*.war ec2-user@172.31.11.255:/opt/apache-tomcat-9.0.75/webapps"
            }
    }

  } catch (e) {
    // If there was an exception thrown, the build failed
    currentBuild.result = "FAILED"
    throw e
  } finally {
    // Success or failure, always send notifications
    Slacknotif(currentBuild.result)
  }
}

def Slacknotif(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
